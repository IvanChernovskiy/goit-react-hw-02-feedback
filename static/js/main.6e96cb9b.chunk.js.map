{"version":3,"sources":["components/FeedBackOptions/FeedBack.module.css","components/FeedBackOptions/FeedBackOptions.js","components/Notification/Notification.js","components/Section/Section.js","components/Statistic/Statistic.js","components/Statistics/Statistics.js","components/App.js","index.js","components/Section/Section.module.css","components/Statistic/Statistic.module.css"],"names":["module","exports","btn","container","FeedbackOptions","_ref","options","onLeaveFeedback","good","neutral","bad","react_default","a","createElement","className","S","type","onClick","name","value","Notification","msg","Section","title","children","section","section__title","Statistic","label","Fragment","text","Statistics","total","positivePercentage","components_Statistic_Statistic","App","state","countTotalFeedback","_this$state","_this","countPositiveFeedbackPercentage","countPositiveFeedback","toFixed","Number","handleChange","e","target","setState","prevState","Object","defineProperty","_this$state2","this","components_Section_Section","FeedBackOptions","components_Statistics_Statistics","components_Notification_Notification","Component","render","App_App","document","querySelector"],"mappings":"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","file":"static/js/main.6e96cb9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedBack_btn__3vB1j\",\"container\":\"FeedBack_container__2OBMa\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport S from './FeedBack.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const { good, neutral, bad } = options;\n  return (\n    <div className={S.container}>\n      <button\n        type=\"button\"\n        onClick={onLeaveFeedback}\n        name=\"good\"\n        value={good}\n        className={S.btn}\n      >\n        Good\n      </button>\n      <button\n        type=\"button\"\n        onClick={onLeaveFeedback}\n        name=\"neutral\"\n        value={neutral}\n        className={S.btn}\n      >\n        Netural\n      </button>\n      <button\n        type=\"button\"\n        onClick={onLeaveFeedback}\n        name=\"bad\"\n        value={bad}\n        className={S.btn}\n      >\n        Bad\n      </button>\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape({\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n  }).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ msg }) => <h2>{msg}</h2>;\n\nNotification.propTypes = {\n  msg: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport S from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <div className={S.section}>\n    <h2 className={S.section__title}>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport S from './Statistic.module.css';\n\nconst Statistic = ({ value, label }) => (\n  <>\n    {label === 'Positive feedback' ? (\n      <p className={S.text}>\n        {label}: {value}%\n      </p>\n    ) : (\n      <p className={S.text}>\n        {label}: {value}\n      </p>\n    )}\n  </>\n);\n\nStatistic.propTypes = {\n  value: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nexport default Statistic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Statistic from '../Statistic/Statistic';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <Statistic value={good} label=\"Good\" />\n    <Statistic value={neutral} label=\"Neutral\" />\n    <Statistic value={bad} label=\"Bad\" />\n    <Statistic value={total} label=\"Total\" />\n    <Statistic value={positivePercentage} label=\"Positive feedback\" />\n  </>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport FeedbackOptions from './FeedBackOptions/FeedBackOptions';\nimport Notification from './Notification/Notification';\nimport Section from './Section/Section';\nimport Statistics from './Statistics/Statistics';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n\n    const countPositiveFeedback = (\n      (good / this.countTotalFeedback()) *\n      100\n    ).toFixed();\n    return Number(countPositiveFeedback);\n  };\n\n  handleChange = e => {\n    const { name } = e.target;\n\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n    this.countTotalFeedback();\n    this.countPositiveFeedbackPercentage();\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Plese leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleChange}\n          />\n        </Section>\n        <Section title=\"Statistic\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification msg=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport App from './components/App';\n\nrender(<App />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section__title\":\"Section_section__title__1SFOV\",\"section\":\"Section_section__36toy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistic_text__218fz\"};"],"sourceRoot":""}